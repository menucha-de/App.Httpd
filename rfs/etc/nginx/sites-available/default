map $http_upgrade $connection_upgrade {
  default Upgrade;
  ''      close;
}
map $http_authorization $access_token {
    "~*^bearer (.*)$" $1;
    default $http_authorization;
}

#Redirect hostname
#server {
#  listen 80 default_server;
#  server_name <hostname>;
#  return 301 https://$server_name$request_uri;
#}

server {
  listen 80 default_server;
  listen [::]:80 default_server;
  client_max_body_size 100M;

  # SSL configuration
  # listen 443 ssl;
  # listen [::]:443 ssl;  
  # ssl_certificate /etc/nginx/ssl/<host>.crt;
  # ssl_certificate_key /etc/nginx/ssl/<host>.key;
  # # ssl_password_file <passwords.txt>;


  root /var/www/html;

  index index.html;

  resolver 127.0.0.53;

  location = /_oauth2_token_validation {

    internal;

    proxy_method      POST;
    proxy_set_header  Authorization "Basic aW50cm9zcGVjdG9yOnk1RXIxc0F3WTZ6cA==";
    proxy_set_header  Content-Type "application/x-www-form-urlencoded";

    set $path "validate";

    proxy_pass        http://auth/oauth2/$path;
  }

  location ~ ^/assets {
    try_files $uri =404;
  }

  location = /sysinfo  {
    proxy_pass http://system:8080/rest/sysinfo;
  }

  location ~ ^/auth/oauth2/token {
    proxy_pass http:/$request_uri;
  }

  location ~ /[^/]+/ws {
    proxy_pass http:/$request_uri;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
  }

  location ~ /[^/]+/ {
    auth_request /_oauth2_token_validation;
    auth_request_set $cookie $upstream_http_set_cookie;

    set $new_request_uri $request_uri;
    if ($request_uri ~ ^/vpn/(.*)$) {
      set $new_request_uri /vpn:1194/$1;
    }
    if ($request_uri ~ ^/system/(.*)$) {
      set $new_request_uri /system:8080/$1;
    }
    if ($request_uri ~ ^/art/(.*)$) {
      set $new_request_uri /art:8080/$1;
    }
    proxy_pass http:/$new_request_uri;

    add_header set-cookie "$cookie";
  }

}
